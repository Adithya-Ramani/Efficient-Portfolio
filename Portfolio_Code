import quandl
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

quandl.ApiConfig.api_key = 'PASTE YOUR API KEY HERE'
selected = ['ITS', 'INFY', 'TCS', 'CIPLA', 'NTPC']
data = quandl.get_table('WIKI/PRICES', ticker = selected,
                        qopts = {'columns': ['date', 'ticker', 'adj_close']},
                        date = {'gte': '2018-1-1', 'lte': '2020-12-31'}, paginate=True)
data.head()

clean = data.set_index('date')
table = clean.pivot(columns='ticker')
table.head()

port_returns = []
port_volatility = []
stock_weights = []

num_assets = len(selected)
num_portfolios = 50000

for single_portfolio in range(num_portfolios):
    weights = np.random.random(num_assets)
    weights /= np.sum(weights)
    returns = np.dot(weights, returns_annual)
    volatility = np.sqrt(np.dot(weights.T, np.dot(cov_annual, weights)))
    port_returns.append(returns)
    port_volatility.append(volatility)
    stock_weights.append(weights)
    
portfolio = {'Returns': port_returns, 'Volatility': port_volatility} 

for counter, symbol in enumerate (selected):
    portfolio[symbol + 'weight'] = [weight[counter] for weights in stock_weights]
    
df = pd.DataFrame(portfolio)   

column_order = ['Returns', 'Volatility'] + [stock + 'weight' for stock in selected]
df = df[column_order]

df.head() 

plt.style.use('seaborn')
df.plot.scatter(x = 'Volatility', r = 'Returns', figsize = (10,8), grid = True)
plt.xlable('Volatility (Std. Deviation)')
plt.ylable('Expected Returns')
plt.title('Efficient Frontier')
plt.show()
